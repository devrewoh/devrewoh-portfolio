package main

import "strings"

templ BaseLayout(title, description string) {
	<!DOCTYPE html>
	<html lang="en">
	<head>
		<meta charset="UTF-8"/>
		<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
		<meta name="description" content={ description }/>
		<title>{ title }</title>
		<link rel="stylesheet" href="/static/css/styles.css"/>
		<link rel="preconnect" href="https://fonts.googleapis.com"/>
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin/>
		<link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet"/>
	</head>
	<body>
		@Header()
		<main class="main">
			{ children... }
		</main>
		@Footer()
	</body>
	</html>
}

templ Header() {
	<header class="header">
		<nav class="nav">
			<div class="nav-brand">
				<a href="/" class="nav-logo">DEVREWOH</a>
			</div>
			<div class="nav-menu">
				<a href="/" class="nav-link">Home</a>
				<a href="/about" class="nav-link">About</a>
				<a href="/contact" class="nav-link">Contact</a>
			</div>
		</nav>
	</header>
}

templ Footer() {
	<footer class="footer">
		<div class="footer-content">
			<p>&copy; 2025 Devrewoh. Built with Go, Templ, and ❤️</p>
		</div>
	</footer>
}

templ Card(title, content string, extraClass string) {
	<div class={ "card", extraClass }>
		if title != "" {
			<h3 class="card-title">{ title }</h3>
		}
		<div class="card-content">
			{ content }
		</div>
	</div>
}

templ Button(text, href, buttonType string) {
	if href != "" {
		if strings.HasPrefix(href, "http://") || strings.HasPrefix(href, "https://") {
			<a href={ templ.URL(href) } class={ "btn", "btn-" + buttonType } target="_blank" rel="noopener noreferrer">{ text }</a>
		} else {
			<a href={ templ.URL(href) } class={ "btn", "btn-" + buttonType }>{ text }</a>
		}
	} else {
		<button class={ "btn", "btn-" + buttonType } type="submit">{ text }</button>
	}
}

templ HomePage(name, tagline string) {
	@BaseLayout("Home – Backend-Focused Go Developer", "Personal site of a Go developer building scalable backend systems with clarity and care.") {
		<section class="hero">
			<div class="hero-content">
				<h1 class="hero-title">Hi, I'm <span class="hero-name">{ name }</span></h1>
				<p class="hero-tagline">{ tagline }</p>
				<p class="hero-description">
					I’ve been obsessed with computers since childhood—from building PCs to repairing radar systems in the Navy.
					My path has taken me through the military, finance, and IT support, always centered around problem-solving.
					Along the way, I’ve studied cybersecurity and backend development, and I’m now focused on building secure, reliable software—especially with Go.
				</p>
				<div class="hero-actions">
					@Button("View My GitHub", "https://github.com/devrewoh", "primary")
					@Button("Get In Touch", "/contact", "secondary")
				</div>
			</div>
		</section>

		<section class="skills">
			<div class="container">
				<h2 class="section-title">Technical Skills</h2>
				<div class="skills-grid">
					@Card("Backend Development", "Build robust APIs and services in Go, with a focus on clean code and simplicity.", "")
					@Card("Data-Driven Design", "Exploring how data flows through systems, including modeling, transformations, and building APIs with structure and clarity.", "")
					@Card("Relational Database Fundamentals", "Utilizing PostgreSQL and SQL to design practical schemas and write effective queries.", "")
					@Card("Testing & Quality", "Unit testing and CI/CD principles to build more reliable software.", "")
				</div>
			</div>
		</section>

		<section class="recent-work">
			<div class="container">
				<h2 class="section-title">Recent Projects</h2>
				<div class="projects-grid">
					@ProjectCard("Newsletter Analytics Platform (In Progress)", "A personal project aimed at helping creators analyze newsletter performance. Currently building the MVP using Go and minimal UI to focus on insights that matter.", "Go, Chi, sqlc, SQLite, templ, Charts.js, Stripe")
					@ProjectCard("BookBot", "A command-line Python tool that analyzes plain-text books to report word and character frequency", "Python, File I/O, String Processing")
					@ProjectCard("Go-Disc-Net", "Network discovery CLI tool written in Go", "Go, Goroutines")
				</div>
			</div>
		</section>
	}
}

templ ProjectCard(title, description, technologies string) {
	<div class="project-card">
		<h3 class="project-title">{ title }</h3>
		<p class="project-description">{ description }</p>
		<div class="project-tech">
			<span class="tech-label">Technologies:</span>
			<span class="tech-list">{ technologies }</span>
		</div>
	</div>
}

templ AboutPage() {
	@BaseLayout("About - Backend-Focused Go Developer", "Learn more about my journey as a Go developer and my passion for clean, efficient code") {
		<section class="about-hero">
			<div class="container">
				<h1 class="page-title">About Me</h1>
				<p class="page-subtitle">Passionate about building scalable systems</p>
			</div>
		</section>

<section class="about-content">
	<div class="container">
		<div class="about-grid">
			<div class="about-text">
				<h2>My Journey</h2>
				<p>
					I've been passionate about computers ever since my 13th birthday, when all I wanted was an old hand-me-down PC from a family friend. That one gift opened the door to a whole new world beyond my neighborhood.
				</p>
				<p>
					By high school, I had replaced traditional electives with computer programming courses at Erie County Technical School. I started with BASIC, then picked up Visual Basic, HTML, CSS, JavaScript, and finally C#. My friends and I spent weekends hosting LAN parties in garages, learning to troubleshoot networking issues and configure switches and routers ourselves.
				</p>
				<p>
					Later, I joined the U.S. Navy, where I received hands-on training in electronics theory and worked on everything from radar-jamming systems to analog and digital avionics, down to the component level. I learned to read schematics, use signal generators and oscilloscopes, and think in binary, octal, hexadecimal, and logic gates. I supported legacy systems written in COBOL and maintained modern test benches built with C++.
				</p>
				<p>
					During this time, I also pursued competitive gaming at the highest levels for over 15 years, achieving multiple "world firsts" and competing for world championships. This taught me discipline, strategic thinking, and how to perform under pressure while working with teams toward shared goals.
				</p>
				<p>
					My time in the Navy was one of the most meaningful chapters of my life. But after several deployments, I found myself wanting a path that felt more connected to everyday life. I tried roles in sales and financial services, but I kept coming back to my first love: computers. For a while, I hesitated to make it a career because I didn't want to lose the joy it gave me. But eventually I realized that building software can be just as fulfilling as anything I had ever done.
				</p>
				<p>
					Programming continues to challenge and inspire me. It rewards curiosity, discipline, and persistence. There's always something new to explore, and each project brings an opportunity to grow. That's what keeps me coming back—it's a lifelong craft I'm proud to be part of.
				</p>
				<h2>Areas of Focus</h2>
				<p>
					As a father to an amazing little girl, I care deeply about the future—both in the world we build and the people we build it for. My work is guided by curiosity, intention, and a long-term mindset.
				</p>
				<p>
					I'm drawn to the full spectrum of computing, from hardware-level problem solving and reverse engineering to software architecture, backend systems, and network performance. I have a strong interest in cybersecurity, developer experience, and the overlap between clean code and real-world reliability. I'm particularly drawn to standardized configurations and POSIX compliance, spending time mastering tools like tmux and Neovim to maximize efficiency and build workflows that are both powerful and portable across platforms.
				</p>
				<p>
				    Outside of technical systems, I'm passionate about education, mentorship, and helping businesses grow with technology that's thoughtful and sustainable. Whether it's a small CLI tool or a platform used by thousands, I want the things I build to stand the test of time.
				</p>
			</div>
		</div>
	</div>
</section>

		<section class="values">
			<div class="container">
				<h2 class="section-title">Core Values</h2>
				<div class="values-grid">
					@ValueCard("Clean Code", "Writing code that is readable, maintainable, and follows Go idioms and best practices.")
					@ValueCard("Performance", "Optimizing for efficiency and scalability while maintaining code clarity and simplicity.")
					@ValueCard("Continuous Learning", "Staying updated with Go ecosystem developments and contributing to the community.")
					@ValueCard("Collaboration", "Working effectively in teams and sharing knowledge through code reviews and mentoring.")
				</div>
			</div>
		</section>
	}
}

templ ValueCard(title, description string) {
	<div class="value-card">
		<h3 class="value-title">{ title }</h3>
		<p class="value-description">{ description }</p>
	</div>
}

templ ContactPage() {
	@BaseLayout("Contact - Backend-Focused Go Developer", "Reach out to collaborate on Go projects or share ideas in backend development") {
		<section class="contact-hero">
			<div class="container">
				<h1 class="page-title">Get In Touch</h1>
				<p class="page-subtitle">Open to collaboration, learning, and problem-solving</p>
			</div>
		</section>

		<section class="contact-content">
			<div class="container">
				<div class="contact-grid">
					<div class="contact-info">
						<h2>Start a Conversation</h2>
						<p>
							Whether you're building something exciting in backend or just love solving complex problems, I'd love to hear from you.
							I’m always open to exchanging ideas or exploring new opportunities in tech.
						</p>
						<div class="contact-methods">
							@ContactMethod("Email", "devrewoh@proton.me", "mailto:devrewoh@proton.me")
							@ContactMethod("LinkedIn", "Connect with me", "https://www.linkedin.com/in/christopherrhower/")
							@ContactMethod("GitHub", "View my repositories", "https://github.com/devrewoh")
						</div>
					</div>
				</div>
			</div>
		</section>
	}
}

templ ContactMethod(label, text, href string) {
    <div class="contact-method">
       <strong class="contact-label">{ label }:</strong>
       // Check if the link is external (starts with http or https)
       if strings.HasPrefix(href, "http://") || strings.HasPrefix(href, "https://") {
          <a href={ templ.URL(href) } class="contact-link" target="_blank" rel="noopener noreferrer">{ text }</a>
       } else {
          <a href={ templ.URL(href) } class="contact-link">{ text }</a>
       }
    </div>
}

templ NotFoundPage() {
	@BaseLayout("Page Not Found", "The page you're looking for doesn't exist") {
		<section class="error-page">
			<div class="container">
				<div class="error-content">
					<h1 class="error-title">404</h1>
					<h2 class="error-subtitle">Page Not Found</h2>
					<p class="error-description">
						The page you're looking for doesn't exist or has been moved.
					</p>
					<div class="error-actions">
						@Button("Go Home", "/", "primary")
						@Button("Contact Me", "/contact", "secondary")
					</div>
				</div>
			</div>
		</section>
	}
}
